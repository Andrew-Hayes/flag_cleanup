pipeline:
  name: ${PIPELINE_NAME}
  identifier: ${PIPELINE_IDENTIFIER}
  projectIdentifier: ${PROJECT_IDENTIFIER}
  orgIdentifier: ${ORG_IDENTIFIER}
  stages:
    - stage:
        name: Build
        identifier: Build
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Plugin
                  name: Flag Cleanup Plugin
                  identifier: Flag_Cleanup_Plugin
                  spec:
                    connectorRef: account.harnessImage
                    image: harness/flag_cleanup
                    settings:
                      path_to_codebase: examples/go
                      path_to_configurations: examples/go/config
                      language: go
                      substitutions: stale_flag_name=<+pipeline.variables.stale_flag>,treated=<+pipeline.variables.treated_as>
                  description: Cleanup Stale Flags
              - step:
                  type: Run
                  name: Print Git Diffs
                  identifier: Print_Git_Diffs
                  spec:
                    shell: Sh
                    command: git --no-pager diff
                  description: Print generated git diffs
              - step:
                  type: Run
                  name: Git Setup
                  identifier: Git_Setup
                  spec:
                    shell: Sh
                    command: |-
                      # install hub tool to open prs on github from cli - https://github.com/github/hub
                      apt update
                      apt install -y hub

                      # set git repo folder to root user to avoid dubious ownership git error
                      chown -R root:root ../harness

                      # checkout our branch
                      git checkout -b cleanup-<+pipeline.variables.stale_flag>
              - step:
                  type: Plugin
                  name: Push To Git
                  identifier: Push_To_Git
                  spec:
                    connectorRef: account.harnessImage
                    image: appleboy/drone-git-push
                    settings:
                      branch: cleanup-<+pipeline.variables.stale_flag>
                      remote: https://<+stage.variables.GITHUB_USERNAME>:<+stage.variables.GITHUB_ACCESS_TOKEN>@github.com/<+stage.variables.GITHUB_USERNAME>/flag_cleanup.git
                      commit: "true"
                      force: "true"
                      commit_message: Set flag <+pipeline.variables.stale_flag> globally <+pipeline.variables.treated_as>
                      author_name: <+stage.variables.GITHUB_USERNAME>
              - step:
                  type: Run
                  name: Open PR on Github
                  identifier: Run_git_status
                  spec:
                    shell: Sh
                    command: |-
                      export GITHUB_TOKEN=<+stage.variables.GITHUB_ACCESS_TOKEN>

                      # write pr heading and description to file
                      # an empty line denotes the change from heading to description
                      echo "(MAINT) Set flag <+pipeline.variables.stale_flag> globally <+pipeline.variables.treated_as>

                      Globally setting feature flag <+pipeline.variables.stale_flag> to be <+pipeline.variables.treated_as> and cleaning up related stale code. 
                      This pr was autogenerated by our Feature Flag cleanup pipeline." >> message

                      # open pr with heading and description from ^
                      hub pull-request -f -F message --base <+stage.variables.GITHUB_USERNAME>:main
                  description: Open pr on github
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: GITHUB_ACCESS_TOKEN
            type: Secret
            description: ""
            value: account.Github_Access_Token
          - name: GITHUB_USERNAME
            type: String
            description: ""
            value: ${YOUR_GITHUB_USERNAME}
  variables:
    - name: stale_flag
      type: String
      description: ""
      value: <+input>
    - name: treated_as
      type: String
      description: ""
      value: <+input>.allowedValues(true,false)
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: ${YOUR_GITHUB_USERNAME}/flag_cleanup
        build: <+input>
