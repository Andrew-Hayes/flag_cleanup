pipeline:
  properties:
    ci:
      codebase:
        connectorRef: ffserver
        build: <+input>
  stages:
    - stage:
        name: Flag Cleanup
        identifier: build
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: ffplayci
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Run Flag Cleanup Tool
                  identifier: Submodule_init
                  spec:
                    connectorRef: platform205701
                    image: us.gcr.io/platform-205701/harness/saas-openjdk-8u242/ff-piranha:latest
                    shell: Sh
                    command: |-
                      polyglot_piranha --help

                      polyglot_piranha -c ./ -f .piranha/ -l go -j output --cleanup-comments --cleanup-comments-buffer 5 --delete-consecutive-new-lines -s const_id= -s stale_flag_name=<+pipeline.variables.stale_flag> -s treated=<+pipeline.variables.treated_as>
                      cat output
                      rm output

                      git status

                      git config --global --add safe.directory /harness
                    privileged: false
                  description: Runs Piranha tool and prints results
              - step:
                  type: Run
                  name: Fix formatting
                  identifier: Fix_formatting
                  spec:
                    connectorRef: ffplay
                    image: us.gcr.io/ff-play-335721/ff-ci-base:latest
                    shell: Sh
                    command: |-
                      make dep
                      goimports -w $(git diff --name-only)
              - step:
                  type: Run
                  name: Push to git
                  identifier: Push_to_git
                  spec:
                    connectorRef: ffplay
                    image: us.gcr.io/ff-play-335721/ff-ci-base:latest
                    shell: Sh
                    command: |-
                      git remote set-url origin https://conormurray95:<+pipeline.variables.github_token>@github.com/wings-software/ff-server.git

                      git config --global user.email "conor.murray@harness.io"
                      git config --global user.name "conormurray95"

                      git add .
                      git status
                      git commit -m "Set flag <+pipeline.variables.stale_flag> globally <+pipeline.variables.treated_as>" -n 
                      git checkout -b cleanup-<+pipeline.variables.stale_flag>
                      git push -f origin cleanup-<+pipeline.variables.stale_flag>
                  description: Push Piranha changes to git
                  when:
                    stageStatus: Success
                  failureStrategies: []
              - step:
                  type: Run
                  name: Open PR on git
                  identifier: Open_PR_on_git
                  spec:
                    connectorRef: ffplay
                    image: us.gcr.io/ff-play-335721/ff-ci-base:latest
                    shell: Sh
                    command: |-
                      # install hub
                      apt install -y hub
                      export GITHUB_TOKEN=<+pipeline.variables.github_token>

                      echo "(MAINT) Set flag <+pipeline.variables.stale_flag> globally <+pipeline.variables.treated_as>

                      Globally setting feature flag <+pipeline.variables.stale_flag> to be <+pipeline.variables.treated_as> and cleaning up related stale code. 
                      This pr was autogenerated by our Feature Flag cleanup pipeline." >> message

                      hub pull-request -F message
          serviceDependencies:
            - identifier: dind
              name: dind
              type: Service
              spec:
                connectorRef: DockerHub
                image: docker:dind
                privileged: false
        variables:
          - name: GITHUB_ACCESS_TOKEN
            type: Secret
            value: davejohnstonffserver
        when:
          pipelineStatus: Success
  tags: {}
  projectIdentifier: FFPipelines
  orgIdentifier: Feature_Flag
  variables:
    - name: GCR_KEY_B64
      type: Secret
      description: ""
      value: Platform_GCR_KEY_b64
    - name: github_token
      type: Secret
      description: ""
      value: conormurray95
    - name: stale_flag
      type: String
      description: ""
      value: <+input>
    - name: treated_as
      type: String
      default: "true"
      description: ""
      value: <+input>.allowedValues(true,false)
  identifier: Feature_Flag_Cleanup
  name: Feature Flag Cleanup
